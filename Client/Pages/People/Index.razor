@page "/people"
@inject HttpClient http
@inject IJSRuntime js

<h3>People</h3>

<div>
    <a class="btn btn-success" href="/people/create">Create</a>
</div>

@if (people == null) {
    <text>Loading...</text>
} else if (people.Length == 0) {
    <text>There are no records in the database</text>
} else {
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var person in people) {
                <tr>
                    <td>
                        <a class="btn btn-success" href="people/edit/@person.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => DeletePerson(person.Id))">Delete</button>
                    </td>
                    <td>@person.Id</td>
                    <td>@person.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Person[] people { get; set; }

    protected override async Task OnInitializedAsync() {
        await LoadPeople();
    }
    
    async Task LoadPeople() {
        people = await http.GetFromJsonAsync<Person[]>("api/people");
    }

    async Task DeletePerson(int personId) {
        var personSelected = people.First(x => x.Id == personId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {personSelected.Name}?")) {
            await http.DeleteAsync($"api/people/{personId}");
            await LoadPeople();
        }
    }
}